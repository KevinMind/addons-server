name: 'Build Docker Image'
description: 'Builds `addons-server` docker image'

inputs:
  image_file:
    required: false
    description: "The File to output the tarball to"
    default: "image.tar"
  target:
    required: false
    description: "The Docker image stage to target"
    default: "production"

outputs:
  tag:
    description: "The full docker tag of the built image"
    value: ${{ steps.build_metadata.outputs.tag }}
  digest:
    description: "The Docker image digest"
    value: ${{ steps.build_metadata.outputs.digest }}

runs:
  using: "composite"
  steps:
    - name: Docker Input Metadata
      id: input_meta
      shell: bash
      run: |
        image="${{ github.repository }}"
        echo "image=$image" >> $GITHUB_OUTPUT

        target="${{ inputs.target }}"

        if [[ "$target" == 'development' || "$target" == 'production' ]]; then
          echo "target=$target" >> $GITHUB_OUTPUT
        else
          echo "Invalid target $target. Expecting one of \'development\' or \'production\'"
          exit 1
        fi

        cat $GITHUB_OUTPUT

    - name: Docker meta
      id: docker_meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ steps.input_meta.outputs.image }}
        flavor: |
          suffix=-next
        tags: |
          type=ref,event=tag
          type=ref,event=branch
          type=ref,event=pr

    - name: Local Environment Setup
      shell: bash
      env:
        DOCKER_TARGET: ${{ inputs.target }}
        DOCKER_VERSION: ${{ steps.docker_meta.outputs.version }}
        DOCKER_COMMIT: ${{ github.sha }}
        VERSION_BUILD_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      run: make setup

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest
        buildkitd-flags: --debug

    - name: Build Docker Image
      id: build
      uses: docker/bake-action@v4
      with:
        targets: web
        set: |
          *.output=type=docker,dest=${{ inputs.image_file }}
          *.cache-from=type=gha
          *.cache-to=type=gha,mode=max

    - name: Output metadata
      id: build_metadata
      shell: bash
      run: |
        cat <<'EOF' > tmp_metadata
        ${{ steps.build.outputs.metadata }}
        EOF

        digest=$(cat tmp_metadata | jq -r '.web."containerimage.digest"')
        echo "digest=$digest" >> $GITHUB_OUTPUT

        raw_tag=$(cat tmp_metadata | jq -r '.web."image.name"')
        tag=${raw_tag#docker.io/}
        echo "tag=$tag" >> $GITHUB_OUTPUT

